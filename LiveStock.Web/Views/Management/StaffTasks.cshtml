@model LiveStock.Core.Models.Staff

@{
    ViewData["Title"] = "Staff Tasks";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar Navigation -->
        <nav class="col-md-3 col-lg-2 d-md-block bg-dark-green sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Dashboard">
                            <i class="fas fa-tachometer-alt me-2"></i>
                            Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Sheep">
                            <i class="fas fa-sheep me-2"></i>
                            Sheep Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Cows">
                            <i class="fas fa-cow me-2"></i>
                            Cow Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Camps">
                            <i class="fas fa-map-marker-alt me-2"></i>
                            Camps
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white active" asp-action="Staff">
                            <i class="fas fa-users me-2"></i>
                            Staff Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Tasks">
                            <i class="fas fa-tasks me-2"></i>
                            Tasks
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Water">
                            <i class="fas fa-tint me-2"></i>
                            Water & Rainfall
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Assets">
                            <i class="fas fa-tools me-2"></i>
                            Assets
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Finance">
                            <i class="fas fa-dollar-sign me-2"></i>
                            Finance
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Notes">
                            <i class="fas fa-sticky-note me-2"></i>
                            Notes
                        </a>
                    </li>
                    <li class="nav-item mt-3">
                        <a class="nav-link text-warning" asp-controller="Account" asp-action="Logout">
                            <i class="fas fa-sign-out-alt me-2"></i>
                            Logout
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">@Model.Name's Tasks</h1>
                <div>
                    <a asp-action="Staff" class="btn btn-secondary me-2">
                        <i class="fas fa-arrow-left me-2"></i>Back to Staff List
                    </a>
                    <a asp-action="CreateTask" class="btn btn-success">
                        <i class="fas fa-plus me-2"></i>Assign New Task
                    </a>
                </div>
            </div>

            <!-- Staff Information -->
            <div class="row mb-4">
                <div class="col-lg-8">
                    <div class="card shadow">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0"><i class="fas fa-user me-2"></i>Staff Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Name:</label>
                                        <p class="form-control-plaintext">@Model.Name</p>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Employee ID:</label>
                                        <p class="form-control-plaintext">@Model.EmployeeId</p>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Role:</label>
                                        <p class="form-control-plaintext">
                                            <span class="badge bg-info">@Model.Role</span>
                                        </p>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Status:</label>
                                        <p class="form-control-plaintext">
                                            @if (Model.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Inactive</span>
                                            }
                                        </p>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Phone:</label>
                                        <p class="form-control-plaintext">@Model.PhoneNumber</p>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Email:</label>
                                        <p class="form-control-plaintext">@(Model.Email ?? "Not provided")</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-4">
                    <div class="card shadow">
                        <div class="card-header bg-info text-white">
                            <h6 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Task Statistics</h6>
                        </div>
                        <div class="card-body">
                            <div class="row text-center mb-3">
                                <div class="col-6">
                                    <h5 class="text-primary">@Model.AssignedTasks.Count</h5>
                                    <small class="text-muted">Total Tasks</small>
                                </div>
                                <div class="col-6">
                                    <h5 class="text-success">@Model.AssignedTasks.Count(t => t.Status == "Completed")</h5>
                                    <small class="text-muted">Completed</small>
                                </div>
                            </div>
                            <div class="row text-center mb-3">
                                <div class="col-6">
                                    <h5 class="text-warning">@Model.AssignedTasks.Count(t => t.Status == "Pending")</h5>
                                    <small class="text-muted">Pending</small>
                                </div>
                                <div class="col-6">
                                    <h5 class="text-info">@Model.AssignedTasks.Count(t => t.Status == "In Progress")</h5>
                                    <small class="text-muted">In Progress</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Assigned Tasks -->
            <div class="card shadow mb-4">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>Assigned Tasks</h5>
                </div>
                <div class="card-body">
                    @if (Model.AssignedTasks.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Description</th>
                                        <th>Importance</th>
                                        <th>Due Date</th>
                                        <th>Status</th>
                                        <th>Created By</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var task in Model.AssignedTasks.OrderByDescending(t => t.CreatedAt))
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(task.PhotoUrl))
                                                    {
                                                        <img src="@task.PhotoUrl" alt="Task Photo" class="img-thumbnail me-2" style="width: 40px; height: 40px; object-fit: cover;" />
                                                    }
                                                    <div>
                                                        <div class="fw-bold">@task.Description</div>
                                                        @if (!string.IsNullOrEmpty(task.Notes))
                                                        {
                                                            <small class="text-muted">@task.Notes</small>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                @{
                                                    var importanceClass = task.Importance switch
                                                    {
                                                        "Critical" => "bg-danger",
                                                        "High" => "bg-warning",
                                                        "Medium" => "bg-info",
                                                        "Low" => "bg-secondary",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @importanceClass">@task.Importance</span>
                                            </td>
                                            <td>
                                                @{
                                                    var dueDateClass = task.DueDate < DateTime.Now && task.Status != "Completed" ? "text-danger" : "";
                                                }
                                                <span class="@dueDateClass">@task.DueDate.ToString("MM/dd/yyyy")</span>
                                            </td>
                                            <td>
                                                @{
                                                    var statusClass = task.Status switch
                                                    {
                                                        "Completed" => "bg-success",
                                                        "In Progress" => "bg-info",
                                                        "Pending" => "bg-warning",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @statusClass">@task.Status</span>
                                            </td>
                                            <td>@task.CreatedBy?.Name</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    @if (task.Status != "Completed")
                                                    {
                                                        <form asp-action="CompleteTask" method="post" class="d-inline">
                                                            <input type="hidden" name="taskId" value="@task.Id" />
                                                            <button type="submit" class="btn btn-sm btn-success" title="Mark Completed">
                                                                <i class="fas fa-check"></i>
                                                            </button>
                                                        </form>
                                                        <button class="btn btn-sm btn-info" title="Update Status" onclick="openStatusModal(@task.Id, '@task.Status')">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                    }
                                                    <button class="btn btn-sm btn-warning" title="View Details"
                                                            onclick="openDetailsModal(this)"
                                                            data-task-id="@task.Id"
                                                            data-desc="@task.Description"
                                                            data-notes="@task.Notes"
                                                            data-importance="@task.Importance"
                                                            data-status="@task.Status"
                                                            data-duedate="@task.DueDate.ToString("MM/dd/yyyy")"
                                                            data-createdby="@task.CreatedBy?.Name">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-tasks fa-4x text-muted mb-3"></i>
                            <h5 class="text-muted">No Tasks Assigned</h5>
                            <p class="text-muted">@Model.Name doesn't have any tasks assigned yet.</p>
                            <a asp-action="CreateTask" class="btn btn-success">
                                <i class="fas fa-plus me-2"></i>Assign First Task
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Task Performance -->
            @if (Model.AssignedTasks.Any())
            {
                <div class="row">
                    <div class="col-md-6">
                        <div class="card shadow">
                            <div class="card-header bg-warning text-white">
                                <h6 class="mb-0"><i class="fas fa-clock me-2"></i>Overdue Tasks</h6>
                            </div>
                            <div class="card-body">
                                @{
                                    var overdueTasks = Model.AssignedTasks.Where(t => t.DueDate < DateTime.Now && t.Status != "Completed").ToList();
                                }
                                @if (overdueTasks.Any())
                                {
                                    <div class="list-group list-group-flush">
                                        @foreach (var task in overdueTasks.Take(5))
                                        {
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <div>
                                                    <div class="fw-bold">@task.Description</div>
                                                    <small class="text-muted">Due: @task.DueDate.ToString("MM/dd/yyyy")</small>
                                                </div>
                                                <span class="badge bg-danger">@((DateTime.Now - task.DueDate).Days) days overdue</span>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="text-muted text-center">No overdue tasks!</p>
                                }
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="card shadow">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0"><i class="fas fa-trophy me-2"></i>Recent Completions</h6>
                            </div>
                            <div class="card-body">
                                @{
                                    var recentCompletions = Model.AssignedTasks.Where(t => t.Status == "Completed" && t.CompletedAt.HasValue).OrderByDescending(t => t.CompletedAt).Take(5).ToList();
                                }
                                @if (recentCompletions.Any())
                                {
                                    <div class="list-group list-group-flush">
                                        @foreach (var task in recentCompletions)
                                        {
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <div>
                                                    <div class="fw-bold">@task.Description</div>
                                                    <small class="text-muted">Completed: @task.CompletedAt?.ToString("MM/dd/yyyy")</small>
                                                </div>
                                                <span class="badge bg-success">Completed</span>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="text-muted text-center">No completed tasks yet.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </main>
    </div>
</div>

<script>
    // Status update modal handlers
    function openStatusModal(taskId, currentStatus) {
        const modal = new bootstrap.Modal(document.getElementById('taskStatusModal'));
        document.getElementById('statusTaskId').value = taskId;
        const select = document.getElementById('statusSelect');
        if (currentStatus) {
            select.value = currentStatus;
        }
        modal.show();
    }

    // Details modal handler
    function openDetailsModal(button) {
        const id = button.getAttribute('data-task-id');
        const desc = button.getAttribute('data-desc') || '';
        const notes = button.getAttribute('data-notes') || '';
        const importance = button.getAttribute('data-importance') || '';
        const status = button.getAttribute('data-status') || '';
        const dueDate = button.getAttribute('data-duedate') || '';
        const createdBy = button.getAttribute('data-createdby') || '';

        document.getElementById('detailsTaskId').textContent = `#${id}`;
        document.getElementById('detailsDesc').textContent = desc;
        document.getElementById('detailsNotes').textContent = notes || '—';
        document.getElementById('detailsImportance').textContent = importance;
        document.getElementById('detailsStatus').textContent = status;
        document.getElementById('detailsDueDate').textContent = dueDate;
        document.getElementById('detailsCreatedBy').textContent = createdBy || 'Unknown';

        const modal = new bootstrap.Modal(document.getElementById('taskDetailsModal'));
        modal.show();
    }
</script>

<style>
    .sidebar {
        min-height: 100vh;
        box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
    }
    
    .sidebar .nav-link {
        font-weight: 500;
        color: #333;
        padding: 0.75rem 1rem;
        border-radius: 0.25rem;
        margin: 0.125rem 0.5rem;
        transition: all 0.3s ease;
    }
    
    .sidebar .nav-link:hover,
    .sidebar .nav-link.active {
        background-color: rgba(255, 255, 255, 0.1);
        color: var(--orange-yellow) !important;
    }
    
    .card {
        border: none;
        border-radius: 15px;
    }
    
    .btn {
        border-radius: 10px;
        font-weight: 600;
    }
    
    .form-control-plaintext {
        padding: 0.375rem 0;
        margin-bottom: 0;
        color: var(--dark-gray);
        background-color: transparent;
        border: solid transparent;
        border-width: 1px 0;
    }
    
    .table th {
        border-top: none;
        font-weight: 600;
        color: var(--dark-gray);
    }
    
    .img-thumbnail {
        border-radius: 10px;
    }
    
    .list-group-item {
        border: none;
        border-bottom: 1px solid #e9ecef;
    }
    
    .list-group-item:last-child {
        border-bottom: none;
    }
</style> 

<!-- Task Status Modal -->
<div class="modal fade" id="taskStatusModal" tabindex="-1" aria-labelledby="taskStatusModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="taskStatusModalLabel">Update Task Status</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form asp-action="UpdateTaskStatus" method="post">
        <div class="modal-body">
          <input type="hidden" id="statusTaskId" name="taskId" />
          <div class="mb-3">
            <label for="statusSelect" class="form-label">Status</label>
            <select id="statusSelect" name="status" class="form-select" required>
              <option value="Pending">Pending</option>
              <option value="In Progress">In Progress</option>
              <option value="Completed">Completed</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save</button>
        </div>
      </form>
    </div>
  </div>
 </div>

<!-- Task Details Modal -->
<div class="modal fade" id="taskDetailsModal" tabindex="-1" aria-labelledby="taskDetailsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="taskDetailsModalLabel">Task <span id="detailsTaskId"></span></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-2"><strong>Description:</strong> <span id="detailsDesc"></span></div>
        <div class="mb-2"><strong>Notes:</strong> <span id="detailsNotes"></span></div>
        <div class="mb-2"><strong>Importance:</strong> <span id="detailsImportance"></span></div>
        <div class="mb-2"><strong>Status:</strong> <span id="detailsStatus"></span></div>
        <div class="mb-2"><strong>Due Date:</strong> <span id="detailsDueDate"></span></div>
        <div class="mb-2"><strong>Created By:</strong> <span id="detailsCreatedBy"></span></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
 </div>