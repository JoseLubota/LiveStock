@model IEnumerable<LiveStock.Core.Models.FarmTask>

@{
    ViewData["Title"] = "Task Management";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar Navigation -->
        <nav class="col-md-3 col-lg-2 d-md-block bg-dark-green sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Dashboard">
                            <i class="fas fa-tachometer-alt me-2"></i>
                            Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Sheep">
                            <i class="fas fa-sheep me-2"></i>
                            Sheep Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Cows">
                            <i class="fas fa-cow me-2"></i>
                            Cow Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Camps">
                            <i class="fas fa-map-marker-alt me-2"></i>
                            Camps
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Staff">
                            <i class="fas fa-users me-2"></i>
                            Staff Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white active" asp-action="Tasks">
                            <i class="fas fa-tasks me-2"></i>
                            Tasks
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Water">
                            <i class="fas fa-tint me-2"></i>
                            Water & Rainfall
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Assets">
                            <i class="fas fa-tools me-2"></i>
                            Assets
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Finance">
                            <i class="fas fa-dollar-sign me-2"></i>
                            Finance
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-action="Notes">
                            <i class="fas fa-sticky-note me-2"></i>
                            Notes
                        </a>
                    </li>
                    <li class="nav-item mt-3">
                        <a class="nav-link text-warning" asp-controller="Account" asp-action="Logout">
                            <i class="fas fa-sign-out-alt me-2"></i>
                            Logout
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
<div class="module-hero" style="background-image: url('@Url.Content("~/Image/IMG-20251025-WA0034.jpg")'); background-size: cover; background-position: center; border-radius: 12px; position: relative; margin-bottom: 1rem;">
                <div class="module-overlay"></div>
                <div class="module-hero-content">
                    <h2 class="h3 mb-1">Task Management</h2>
                    <p class="mb-0">Create, assign, and track farm tasks efficiently.</p>
                </div>
            </div>
            <style>
                .module-hero { position: relative; min-height: 220px; }
                .module-overlay { position: absolute; inset: 0; background: rgba(0,0,0,0.35); border-radius: 12px; }
                .module-hero-content { position: relative; z-index: 1; color: #fff; padding: 1.25rem 1.5rem; }
            </style>
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Task Management</h1>
                <a asp-action="CreateTask" class="btn btn-brand">
                    <i class="fas fa-plus me-2"></i>Create New Task
                </a>
            </div>

            <div class="row">
                <!-- Task Assignment Section (hidden as per request) -->
                <div class="col-lg-4 d-none">
                    <div class="card shadow card-brand mb-4">
                        <div class="card-header bg-medium-green text-white">
                            <h5 class="mb-0"><i class="fas fa-plus me-2"></i>Assign Tasks</h5>
                        </div>
                        <div class="card-body">
                            <form asp-action="CreateTask" method="post">
                                <div class="mb-3">
                                    <label class="form-label">Describe the task:</label>
                                    <textarea class="form-control" name="Description" rows="3" placeholder="Enter task description" required></textarea>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Select Staff for Task:</label>
                                    <select class="form-control" name="AssignedToId" required>
                                        <option value="">Select Staff Member</option>
                                        @foreach (var staff in ViewBag.Staff as List<LiveStock.Core.Models.Staff>)
                                        {
                                            <option value="@staff.Id">@staff.Name (@staff.EmployeeId)</option>
                                        }
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Select task importance:</label>
                                    <select class="form-control" name="Importance" required>
                                        <option value="">Select Importance</option>
                                        <option value="Low">Low</option>
                                        <option value="Medium">Medium</option>
                                        <option value="High">High</option>
                                        <option value="Critical">Critical</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Insert Task Due Date:</label>
                                    <input type="datetime-local" class="form-control" name="DueDate" required />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Notes (optional):</label>
                                    <textarea class="form-control" name="Notes" rows="2"></textarea>
                                </div>
                                <button type="submit" class="btn btn-success w-100">SEND</button>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Task Lists Section -->
                <div class="col-lg-12">
                    <div class="row">
                        <!-- Current Tasks -->
                        <div class="col-md-6">
                            <div class="card shadow card-brand mb-4">
                                <div class="card-header bg-orange-yellow text-white">
                                    <h6 class="mb-0"><i class="fas fa-clock me-2"></i>Current Tasks</h6>
                                </div>
                                <div class="card-body">
                                    @{
                                        var currentTasks = Model.Where(t => t.Status != "Completed").OrderByDescending(t => t.CreatedAt).ToList();
                                    }
                                    @if (currentTasks.Any())
                                    {
                                        <div class="task-list">
                                            @foreach (var t in currentTasks)
                                            {
                                                var css = t.Importance == "Critical" || t.Importance == "High" ? "text-danger" : t.Importance == "Medium" ? "text-warning" : "text-success";
                                                <div class="task-item @css mb-3">
                                                    <div class="d-flex justify-content-between">
                                                        <strong>@t.Description</strong>
                                                        <small class="text-muted">Due: @t.DueDate.ToString("MM/dd/yyyy HH:mm")</small>
                                                    </div>
                                                    <div class="small text-muted">
                                                        Assigned to: @(t.AssignedTo?.Name ?? ("#" + t.AssignedToId)) • Importance: @t.Importance • Status: @t.Status
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(t.Notes))
                                                    {
                                                        <div class="small mt-1">@t.Notes</div>
                                                    }
                                                    <form asp-action="CompleteTask" method="post" class="mt-2">
                                                        <input type="hidden" name="taskId" value="@t.Id" />
                                                        <button type="submit" class="btn btn-sm btn-brand">
                                                            <i class="fas fa-check me-1"></i>Mark Completed
                                                        </button>
                                                    </form>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="text-muted">No current tasks.</p>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Completed Tasks -->
                        <div class="col-md-6">
                            <div class="card shadow card-brand mb-4">
                                <div class="card-header bg-medium-green text-white">
                                    <h6 class="mb-0"><i class="fas fa-check-circle me-2"></i>Completed Tasks</h6>
                                </div>
                                <div class="card-body">
                                    @{
                                        var completedTasks = Model.Where(t => t.Status == "Completed").OrderByDescending(t => t.CompletedAt ?? t.CreatedAt).ToList();
                                    }
                                    @if (completedTasks.Any())
                                    {
                                        <div class="task-list">
                                            @foreach (var t in completedTasks)
                                            {
                                                <div class="task-item text-success mb-3">
                                                    <div class="d-flex justify-content-between">
                                                        <strong>@t.Description</strong>
                                                        <small class="text-muted">Completed: @(t.CompletedAt?.ToString("MM/dd/yyyy HH:mm") ?? "-")</small>
                                                    </div>
                                                    <div class="small text-muted">
                                                        Assigned to: @(t.AssignedTo?.Name ?? ("#" + t.AssignedToId)) • Importance: @t.Importance
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(t.Notes))
                                                    {
                                                        <div class="small mt-1">@t.Notes</div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="text-muted">No completed tasks yet.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Chat Window -->
                    <div class="card shadow card-brand mb-4">
                        <div class="card-header bg-orange-yellow text-white">
                            <h6 class="mb-0"><i class="fas fa-comments me-2"></i>Staff Communication</h6>
                        </div>
                        <div class="card-body">
                            @{ var messages = ViewBag.Messages as List<LiveStock.Core.Models.Message> ?? new List<LiveStock.Core.Models.Message>(); }
                            <div class="chat-window" style="height: 300px; overflow-y: auto; border: 1px solid #dee2e6; border-radius: 0.375rem; padding: 1rem; background-color: #f8f9fa;">
                                @if (messages.Any())
                                {
                                    foreach (var m in messages.OrderBy(m => m.SentAt))
                                    {
                                        <div class="chat-message mb-2">
                                            <strong>@(m.Sender?.Name ?? ("#" + m.SenderId)):</strong> @m.Content
                                            <div class="small text-muted">@m.SentAt.ToLocalTime().ToString("MMM d, HH:mm") @((m.IsBroadcast) ? "• Broadcast" : "")</div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="text-muted">No messages yet.</div>
                                }
                            </div>
                            <form asp-action="SendMessage" method="post" class="input-group mt-3">
                                <input type="text" class="form-control" name="content" placeholder="Type your message..." maxlength="1000" required />
                                <button class="btn btn-brand" type="submit">
                                    <i class="fas fa-paper-plane"></i> Send
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Create Task Modal -->
<div class="modal fade" id="createTaskModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Create New Task</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form asp-action="CreateTask" method="post">
                    <div class="mb-3">
                        <label class="form-label">Task Description:</label>
                        <textarea class="form-control" name="Description" rows="3" required></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Assign To:</label>
                                <select class="form-control" name="AssignedToId" required>
                                    <option value="">Select Staff Member</option>
                                    @foreach (var staff in ViewBag.Staff as List<LiveStock.Core.Models.Staff>)
                                    {
                                        <option value="@staff.Id">@staff.Name (@staff.EmployeeId)</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Importance:</label>
                                <select class="form-control" name="Importance" required>
                                    <option value="">Select Importance</option>
                                    <option value="Low">Low</option>
                                    <option value="Medium">Medium</option>
                                    <option value="High">High</option>
                                    <option value="Critical">Critical</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Due Date:</label>
                        <input type="datetime-local" class="form-control" name="DueDate" required />
                    </div>
                                <div class="mb-3">
                                    <label class="form-label">Notes (optional):</label>
                                    <textarea class="form-control" name="Notes" rows="2"></textarea>
                                </div>
                    <div class="d-flex justify-content-end gap-2">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-brand">Create Task</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<style>
    .sidebar {
        min-height: 100vh;
        box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
    }
    
    .sidebar .nav-link {
        font-weight: 500;
        color: #333;
        padding: 0.75rem 1rem;
        border-radius: 0.25rem;
        margin: 0.125rem 0.5rem;
        transition: all 0.3s ease;
    }
    
    .sidebar .nav-link:hover,
    .sidebar .nav-link.active {
        background-color: rgba(255, 255, 255, 0.1);
        color: var(--orange-yellow) !important;
    }
    
    .card {
        border: none;
        border-radius: 15px;
    }
    
    .task-item {
        padding: 0.5rem;
        border-radius: 0.375rem;
        background-color: #f8f9fa;
        border-left: 3px solid;
    }
    
    .task-item.text-danger {
        border-left-color: #dc3545;
    }
    
    .task-item.text-warning {
        border-left-color: #ffc107;
    }
    
    .task-item.text-success {
        border-left-color: #198754;
    }
    
    .chat-message {
        padding: 0.5rem;
        background-color: white;
        border-radius: 0.375rem;
        border: 1px solid #dee2e6;
    }
    
    .btn {
        border-radius: 10px;
        font-weight: 600;
    }
    
    .form-control {
        border-radius: 10px;
        border: 2px solid #e9ecef;
        transition: border-color 0.3s ease;
    }
    
    .form-control:focus {
        border-color: var(--medium-green);
        box-shadow: 0 0 0 0.2rem rgba(78, 113, 69, 0.25);
    }
</style>